// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test if ForgotPassword renders correctly 1`] = `
<div
  style={
    Object {
      "overflowX": "hidden",
    }
  }
>
  <WithStyles(Grid)
    alignItems="stretch"
    container={true}
    justify="center"
  >
    <WithStyles(SearchAppBar)
      changesearch={[Function]}
    />
  </WithStyles(Grid)>
  <WithStyles(Grid)
    alignItems="center"
    container={true}
    direction="column"
    justify="center"
    spacing="16"
    style={
      Object {
        "padding": 80,
      }
    }
  />
</div>
`;

exports[`Testing Search component Test if Search renders correctly 1`] = `
<div
  style={
    Object {
      "overflowX": "hidden",
    }
  }
>
  <WithStyles(Grid)
    alignItems="stretch"
    container={true}
    justify="center"
  >
    <WithStyles(SearchAppBar)
      changesearch={[Function]}
    />
  </WithStyles(Grid)>
  <WithStyles(Grid)
    alignItems="center"
    container={true}
    direction="column"
    justify="center"
    spacing="16"
    style={
      Object {
        "padding": 80,
      }
    }
  />
</div>
`;

exports[`renders correctly 1`] = `
<div
  style={
    Object {
      "overflowX": "hidden",
    }
  }
>
  <div
    className="MuiGrid-container-1 MuiGrid-justify-xs-center-18"
  >
    <div
      className="SearchAppBar-root-98"
    >
      <header
        className="MuiPaper-root-113 MuiPaper-elevation4-119 MuiAppBar-root-104 MuiAppBar-positionStatic-108 MuiAppBar-colorPrimary-111"
        style={
          Object {
            "background": "#1DA1F2",
          }
        }
      >
        <div
          className="MuiToolbar-root-140 MuiToolbar-regular-142 MuiToolbar-gutters-141"
        >
          <img
            alt="Logo"
            height="40"
            src="Logo.png"
            width="40"
          />
          <h6
            className="MuiTypography-root-144 MuiTypography-h6-161 MuiTypography-colorInherit-173 MuiTypography-noWrap-170 SearchAppBar-search-100"
          >
            +Monitoria
          </h6>
          <div
            className="SearchAppBar-grow-99"
          />
          <div
            className="SearchAppBar-search-100"
          >
            <div
              className="MuiInputBase-root-180"
              onClick={[Function]}
            >
              <input
                className="MuiInputBase-input-190"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="Pesquisar"
                type="text"
              />
            </div>
          </div>
        </div>
      </header>
    </div>
  </div>
  <div
    className="MuiGrid-container-1 MuiGrid-spacing-xs-16-24 MuiGrid-direction-xs-column-4 MuiGrid-align-items-xs-center-9 MuiGrid-justify-xs-center-18"
    style={
      Object {
        "padding": 80,
      }
    }
  />
</div>
`;

exports[`testing axios 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Grid)
          alignItems="stretch"
          container={true}
          justify="center"
        >
          <WithStyles(SearchAppBar)
            changesearch={[Function]}
          />
        </WithStyles(Grid)>,
        <WithStyles(Grid)
          alignItems="center"
          container={true}
          direction="column"
          justify="center"
          spacing="16"
          style={
            Object {
              "padding": 80,
            }
          }
        />,
      ],
      "style": Object {
        "overflowX": "hidden",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "alignItems": "stretch",
          "children": <WithStyles(SearchAppBar)
            changesearch={[Function]}
          />,
          "container": true,
          "justify": "center",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "changesearch": [Function],
            "search": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "alignItems": "center",
          "children": Array [],
          "container": true,
          "direction": "column",
          "justify": "center",
          "spacing": "16",
          "style": Object {
            "padding": 80,
          },
        },
        "ref": null,
        "rendered": Array [],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Grid)
            alignItems="stretch"
            container={true}
            justify="center"
          >
            <WithStyles(SearchAppBar)
              changesearch={[Function]}
            />
          </WithStyles(Grid)>,
          <WithStyles(Grid)
            alignItems="center"
            container={true}
            direction="column"
            justify="center"
            spacing="16"
            style={
              Object {
                "padding": 80,
              }
            }
          />,
        ],
        "style": Object {
          "overflowX": "hidden",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alignItems": "stretch",
            "children": <WithStyles(SearchAppBar)
              changesearch={[Function]}
            />,
            "container": true,
            "justify": "center",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "changesearch": [Function],
              "search": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alignItems": "center",
            "children": Array [],
            "container": true,
            "direction": "column",
            "justify": "center",
            "spacing": "16",
            "style": Object {
              "padding": 80,
            },
          },
          "ref": null,
          "rendered": Array [],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
