// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Logout renders a snapshot properly 1`] = `
<form
  autoComplete="off"
  className="SimpleSelect-root-1"
>
  <div
    className="MuiFormControl-root-4 SimpleSelect-formControl-2"
  >
    <label
      className="MuiFormLabel-root-19 MuiInputLabel-root-8 MuiInputLabel-formControl-13 MuiInputLabel-animated-16 MuiInputLabel-outlined-18"
      data-shrink={false}
      htmlFor="outlined-age-simple"
    >
      Curso
    </label>
    <div
      className="MuiInputBase-root-46 MuiOutlinedInput-root-33 MuiInputBase-formControl-47"
      onClick={[Function]}
    >
      <fieldset
        aria-hidden={true}
        className="MuiPrivateNotchedOutline-root-63 MuiOutlinedInput-notchedOutline-40"
        style={
          Object {
            "paddingLeft": 8,
          }
        }
      >
        <legend
          className="MuiPrivateNotchedOutline-legend-64"
          style={
            Object {
              "width": 0.01,
            }
          }
        >
          <span
            dangerouslySetInnerHTML={
              Object {
                "__html": "&#8203;",
              }
            }
          />
        </legend>
      </fieldset>
      <div
        className="MuiSelect-root-26"
      >
        <div
          aria-haspopup="true"
          aria-pressed="false"
          className="MuiSelect-select-27 MuiSelect-selectMenu-30 MuiSelect-outlined-29 MuiInputBase-input-56 MuiOutlinedInput-input-41"
          id="select-age"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          role="button"
          tabIndex={0}
        >
          <span
            dangerouslySetInnerHTML={
              Object {
                "__html": "&#8203;",
              }
            }
          />
        </div>
        <input
          id="outlined-age-simple"
          name="age"
          type="hidden"
          value=""
        />
        <svg
          aria-hidden="true"
          className="MuiSvgIcon-root-65 MuiSelect-icon-32"
          focusable="false"
          role="presentation"
          viewBox="0 0 24 24"
        >
          <path
            d="M7 10l5 5 5-5z"
          />
        </svg>
      </div>
    </div>
  </div>
</form>
`;

exports[`Testing Course component Test if Course renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WithStyles(SimpleSelect) />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "classes": Object {
        "formControl": "SimpleSelect-formControl-2",
        "root": "SimpleSelect-root-1",
        "selectEmpty": "SimpleSelect-selectEmpty-3",
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "classes": Object {
          "formControl": "SimpleSelect-formControl-2",
          "root": "SimpleSelect-root-1",
          "selectEmpty": "SimpleSelect-selectEmpty-3",
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing Course component Test if card renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WithStyles(SimpleSelect) />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "classes": Object {
        "formControl": "SimpleSelect-formControl-2",
        "root": "SimpleSelect-root-1",
        "selectEmpty": "SimpleSelect-selectEmpty-3",
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "classes": Object {
          "formControl": "SimpleSelect-formControl-2",
          "root": "SimpleSelect-root-1",
          "selectEmpty": "SimpleSelect-selectEmpty-3",
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
